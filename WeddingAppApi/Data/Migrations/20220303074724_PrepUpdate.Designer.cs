// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeddingAppApi.Data;

namespace WeddingAppApi.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220303074724_PrepUpdate")]
    partial class PrepUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("WeddingAppApi.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("WeddingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeddingAppApi.Models.Preparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("WeddingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WeddingId")
                        .IsUnique();

                    b.ToTable("Preparations");
                });

            modelBuilder.Entity("WeddingAppApi.Models.SubPreparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreparationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PreparationId");

                    b.ToTable("SubPreparations");
                });

            modelBuilder.Entity("WeddingAppApi.Models.Wedding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Weddings");
                });

            modelBuilder.Entity("WeddingAppApi.Models.Preparation", b =>
                {
                    b.HasOne("WeddingAppApi.Models.Wedding", "Wedding")
                        .WithOne("ParentPreparation")
                        .HasForeignKey("WeddingAppApi.Models.Preparation", "WeddingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wedding");
                });

            modelBuilder.Entity("WeddingAppApi.Models.SubPreparation", b =>
                {
                    b.HasOne("WeddingAppApi.Models.Preparation", "ParentPreparation")
                        .WithMany("SubPreparation")
                        .HasForeignKey("PreparationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentPreparation");
                });

            modelBuilder.Entity("WeddingAppApi.Models.Wedding", b =>
                {
                    b.HasOne("WeddingAppApi.Models.AppUser", "AppUser")
                        .WithOne("Wedding")
                        .HasForeignKey("WeddingAppApi.Models.Wedding", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("WeddingAppApi.Models.AppUser", b =>
                {
                    b.Navigation("Wedding");
                });

            modelBuilder.Entity("WeddingAppApi.Models.Preparation", b =>
                {
                    b.Navigation("SubPreparation");
                });

            modelBuilder.Entity("WeddingAppApi.Models.Wedding", b =>
                {
                    b.Navigation("ParentPreparation");
                });
#pragma warning restore 612, 618
        }
    }
}
